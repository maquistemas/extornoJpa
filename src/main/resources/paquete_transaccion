CREATE OR REPLACE PACKAGE PACK_TRANSACCION_MQ AS

-- SP(1) para realizar: Transacción de transferencia de dinero
  PROCEDURE SP_TRANSFERENCIA(
  PAR_TRANSF_USUARIO_ID INTEGER,
  PAR_TRANSF_CUENTA_ORIGEN INTEGER, 
  PAR_TRANSF_CUENTA_DESTINO INTEGER, 
  PAR_TRANSF_MONTO NUMBER);
                                                      
-- SP(2) para realizar: Transacción de extorno de dinero                                                      
  PROCEDURE SP_EXTORNO (PAR_TRANSF_ID INTEGER, PAR_USUARIO_ID INTEGER);
  
  FUNCTION SF_SUMA ( a in number, b in number ) RETURN NUMBER;


END PACK_TRANSACCION_MQ;

/



-------BODY

CREATE OR REPLACE PACKAGE BODY PACK_TRANSACCION_MQ AS


-- SP(1) para realizar: Transacción de transferencia de dinero
   PROCEDURE SP_TRANSFERENCIA(
  PAR_TRANSF_USUARIO_ID INTEGER,
  PAR_TRANSF_CUENTA_ORIGEN INTEGER, 
  PAR_TRANSF_CUENTA_DESTINO INTEGER, 
  PAR_TRANSF_MONTO NUMBER)
  
  IS
  VAR_MONTO      NUMBER;
  ERR_SALDO      EXCEPTION;
  ERR_CTAORIGEN  EXCEPTION;
  ERR_CTADESTINO EXCEPTION;
    
  BEGIN
  SELECT SALDO
  INTO VAR_MONTO
  FROM MQCUENTAS
  WHERE ID = PAR_TRANSF_CUENTA_ORIGEN;
  
  IF VAR_MONTO <  PAR_TRANSF_MONTO THEN -- Si el saldo es menor (VAR_MONTO) saltar (RAISE) a ERR_SALDO
     --DBMS_OUTPUT.PUT_LINE('Saldo Insuficiente....!');
     --RETURN; --interrumpe programa
     RAISE ERR_SALDO;
  END IF;
  
 -- DECREMENTAR LA CTA ORIGEN
 UPDATE MQCUENTAS
 SET SALDO = SALDO - PAR_TRANSF_MONTO
 WHERE ID = PAR_TRANSF_CUENTA_ORIGEN;

IF SQL%ROWCOUNT <> 1 THEN --Identifica las filas afectadas por operacion anterior
     --DBMS_OUTPUT.PUT_LINE('Cta Origen no existe....!');
    -- RETURN; --interrumpe programa
    RAISE ERR_CTAORIGEN;
END IF;

 -- INCREMENTAR CTA DESTINO
  UPDATE MQCUENTAS
 SET SALDO = SALDO + PAR_TRANSF_MONTO
 WHERE ID = PAR_TRANSF_CUENTA_DESTINO;
 
 IF SQL%ROWCOUNT <> 1 THEN --Identifica las filas afectadas por operacion anterior
     --DBMS_OUTPUT.PUT_LINE('Cta Destino no existe....!');
    -- ROLLBACK; --DESHACE LA OPERACION  UPDATE ANTERIOR
    -- RETURN; --interrumpe programa
    RAISE ERR_CTADESTINO;
END IF;


  --INSERTAR EN TRANSFERENCIA
INSERT INTO MQTRANSFERENCIAS(ID, MQUSUARIOS_ID, MQCUENTAORIGEN_ID, MQCUENTADESTINO_ID, MONTO, TIPO)
VALUES(SEQ_MQTRANSFERENCIAS.NEXTVAL,PAR_TRANSF_USUARIO_ID, PAR_TRANSF_CUENTA_ORIGEN, PAR_TRANSF_CUENTA_DESTINO, PAR_TRANSF_MONTO,'T');

COMMIT;

EXCEPTION 
      WHEN ERR_SALDO THEN 
               DBMS_OUTPUT.PUT_LINE('Saldo Insuficiente...!');
      WHEN ERR_CTAORIGEN THEN
               DBMS_OUTPUT.PUT_LINE('Cta Origen no existe....!');  
      WHEN ERR_CTADESTINO THEN
               DBMS_OUTPUT.PUT_LINE('Cta Destino no existe....!');  
               ROLLBACK;
      WHEN OTHERS THEN 
               DBMS_OUTPUT.PUT_LINE('ERROR:' ||SQLERRM);  
END;
  
  
---------------------------------------------------------------------------------------------------------------------------------------- 
-- SP(2) para realizar: Transacción de extorno de dinero   
 PROCEDURE SP_EXTORNO (PAR_TRANSF_ID INTEGER, PAR_USUARIO_ID INTEGER)
                             
IS
VAR_MONTO NUMBER; 
VAR_CTAORIGEN INTEGER;
VAR_CTADESTINO INTEGER;
VAR_NUM INTEGER;
VAR_SALDODESTINO INTEGER;

ERR_SALDO EXCEPTION;
ERR_CTAORIGEN EXCEPTION;
ERR_CTADESTINO EXCEPTION;
ERR_NUMOPERACION EXCEPTION;

BEGIN
    
      SELECT COUNT(*)
      INTO VAR_NUM 
      FROM MQTRANSFERENCIAS
      WHERE ID = PAR_TRANSF_ID;  
      
   IF  VAR_NUM > 0 THEN
      
      SELECT MQCUENTAORIGEN_ID -- capturo el monto de la cuenta origen
      INTO VAR_CTAORIGEN
      FROM MQTRANSFERENCIAS
      WHERE ID = PAR_TRANSF_ID;  
      
      SELECT MQCUENTADESTINO_ID -- capturo el monto de la cuenta origen
      INTO VAR_CTADESTINO
      FROM MQTRANSFERENCIAS
      WHERE ID = PAR_TRANSF_ID;  
      
      SELECT MONTO -- capturo el monto de la cuenta origen
      INTO VAR_MONTO
      FROM MQTRANSFERENCIAS
      WHERE ID = PAR_TRANSF_ID;  
      
      SELECT SALDO
      INTO VAR_SALDODESTINO 
      FROM MQCUENTAS
      WHERE ID=VAR_CTADESTINO;
      
      --SALDO CUENTA DESTINO A QUITAR
        IF VAR_SALDODESTINO < VAR_MONTO THEN --Identifica las filas afectadas por operacion anterior
     --DBMS_OUTPUT.PUT_LINE('Saldo Insuficiente....!');
     --RETURN; --interrumpe programa
       RAISE ERR_SALDO;
       END IF;
      
      
      

      -- Se devuelve a la cuenta origen el monto prestado (Incrementa)
      UPDATE MQCUENTAS
      SET SALDO = SALDO + VAR_MONTO
      WHERE ID = VAR_CTAORIGEN;
      
      IF SQL%ROWCOUNT <> 1 THEN -- (SQL%ROWCOUNT Identifica filas afectadas por operacion)de no existir cuenta origen salta a su tipo de error
      RAISE ERR_CTAORIGEN;
      END IF;
      
      -- Se resta a la cuenta destino el monto prestado (Decrementa)
      UPDATE MQCUENTAS
      SET SALDO = SALDO - VAR_MONTO
      WHERE ID = VAR_CTADESTINO;
      
      IF SQL%ROWCOUNT <> 1 THEN  -- (SQL%ROWCOUNT Identifica filas afectadas por operacion)de no existir cuenta destino salta a su tipo de error
      RAISE ERR_CTADESTINO;
      END IF;
            
      
      -- Insertar en diario el tipo de transacción extorno (E)
      INSERT INTO MQTRANSFERENCIAS(ID, MQUSUARIOS_ID, MQCUENTAORIGEN_ID, MQCUENTADESTINO_ID, MONTO, TIPO)
      VALUES
      (SEQ_MQTRANSFERENCIAS.NEXTVAL,PAR_USUARIO_ID, VAR_CTAORIGEN, VAR_CTADESTINO, VAR_MONTO,'E');
             
       COMMIT; 
       
          ELSE 
          RAISE ERR_NUMOPERACION;--si el numero de operación no existe salta a su tipo de error.

   END IF;
       -- zona de excepciopnes
       EXCEPTION
               WHEN ERR_NUMOPERACION THEN
                DBMS_OUTPUT.PUT_LINE('No existe operación');
                WHEN ERR_SALDO THEN
                DBMS_OUTPUT.PUT_LINE('Saldo Insuficiente');
                WHEN ERR_CTAORIGEN THEN
                DBMS_OUTPUT.PUT_LINE('Cta de origen no existe');
                WHEN ERR_CTADESTINO THEN
                DBMS_OUTPUT.PUT_LINE('Cta de destino no existe');
                ROLLBACK;
                WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);

END;
  
--FUNCION SUMA
function SF_SUMA ( a in number, b in number )
return number
IS

BEGIN
   return a + b ;

END;


END PACK_TRANSACCION_MQ;

/




--PROBAMOS PACK_TRANSACCION
  --PACK_TRANSACCION_MQ.SP_TRANSFERENCIA(2, 2, 1, 1000);
  --PACK_TRANSACCION_MQ.SP_EXTORNO(1, 2);